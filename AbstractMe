//An abstract self-portrait based on an image of myself imported into the program.

//I used the AbstractDemo from class as the basis for my code.
//When you move the mouse, there is a disruption effect with a new rectangle in a different rainbow color being drawn on top.
PImage photo;

void setup() {
  size(500, 500);
  photo = loadImage( "me.jpg" );
  background( 0 );
}

void draw() {

  photo.loadPixels();

  for (int i = 0; i < 100; i++ ) {
    float chance = random( 0, 1 );
    if (chance < 0.9) {
      float x = random( width );
      float y = random( height );
      float w = random( 10, 80 );

      drawRects( x, y, w); ///draws the rectangles
      cursorEffect(); ///creates the effect of a rainbow colored square following the mouse.
    }
  }
}

//function for drawRects
void drawRects( float x, float y, float w) {
  x = constrain( x, 0, width - 1);
  y = constrain( y, 0, height - 1);
  int location = int(x) + int(y) * width;

  //color

  float r = red( photo.pixels[location] );
  float g = green( photo.pixels[location] );
  float b = blue( photo.pixels[location] );

  ///rects are smaller where there is less brightness
  float brightnessValue = brightness( photo.pixels[location] );
  if (brightnessValue<100) {
    w = random(0, 50);
  } else if (brightnessValue>100) {
    w=random(50, 100);
  }
  w = map( b, 0, 255, 4, 50 );

  ///drawing of the rect itself

  fill( r, g, b );
  noStroke();
  rect(x, y, w, w );
}

//this function enacts the mouse cursor effect. when you move the cursor, it discrupts the image.
void cursorEffect() {

  ///randomized color 

  float r = random(0, 255);
  float g = random(0, 255);
  float b = random(0, 255);
  fill(r, g, b);
  
  //location is based off the mouses position
  
  rect(mouseX, mouseY, 35, 35);
}
